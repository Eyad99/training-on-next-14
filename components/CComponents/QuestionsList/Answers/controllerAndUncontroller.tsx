import CodeMirrorEditor from '@/components/RComponents/CodeMirrorEditor';
import React from 'react';

const ControllerAndUncontroller = () => {
	return (
		<div className='flex flex-col gap-4'>
			<h4 className='font-bold text-2xl text-rtl'>๐น ุงููุฑู ุจูู Controlled ู Uncontrolled Components ูู React</h4>
			<ul className='text-rtl'>
				<li className='font-bold list-none'> โ 1. Controlled Component (ุงูููุชุญูู ุจู)</li>
				<li>ูุชู ุชุฎุฒูู ุงูุจูุงูุงุช ูู state ูุฅุฏุงุฑุชูุง ุนุจุฑ React.</li>
				<li>ูู ุชุบููุฑ ูู ุงููุฏุฎูุงุช ูุชู ุชุฎุฒููู ุฏุงุฎู ุญุงูุฉ (state) ุงููููู.</li>
				<li>ููุงุณุจ ุฅุฐุง ููุช ุชุญุชุงุฌ ุฅูู ุชุญุฏูุซ ุงูุญุงูุฉ ุจุดูู ุฏููุงูููู ุฃู ุงูุชูุงุนู ูุน ุงูููู.</li>
			</ul>
			<CodeMirrorEditor
				value={`
                'use client';
import { useState } from 'react';

export default function ControlledEditor() {
	const [content, setContent] = useState('');

	return (
		<div>
			<h2>Controlled Editor</h2>
			<textarea
				value={content}
				onChange={(e) => setContent(e.target.value)}
				placeholder="ุงูุชุจ ููุง..."
				className="w-full h-40 border p-2"
			/>
			<p>ุงููุญุชูู ุงูุญุงูู: {content}</p>
		</div>
	);
}
                `}
			/>

			<ul className='text-rtl'>
				<li className='font-bold list-none'>โ 2. Uncontrolled Component (ุบูุฑ ุงูููุชุญูู ุจู)</li>
				<li>ูุชู ุชุฎุฒูู ุงูุจูุงูุงุช ุฏุงุฎู DOM ูุจุงุดุฑุฉู ุจุงุณุชุฎุฏุงู ref.</li>
				<li>React ูุง ูุชุญูู ูู ุงููููุ ุจู ูุชู ุงููุตูู ุฅูููุง ููุท ุนูุฏ ุงูุญุงุฌุฉ.</li>
				<li>ููุงุณุจ ุฅุฐุง ููุช ูุง ุชุญุชุงุฌ ุฅูู ุชุญุฏูุซ ุงูุญุงูุฉ ูู ูู ุชุบููุฑ.</li>
			</ul>
			<CodeMirrorEditor
				value={`
                'use client';

import { useRef } from 'react';

export default function UncontrolledEditor() {
	const textRef = useRef<HTMLTextAreaElement>(null);

	const handleShowContent = () => {
		alert(ุงููุญุชูู: "textRef.current?.value");
	};

	return (
		<div>
			<h2>Uncontrolled Editor</h2>
			<textarea ref={textRef} placeholder="ุงูุชุจ ููุง..." className="w-full h-40 border p-2" />
			<button onClick={handleShowContent} className="mt-2 p-2 bg-blue-500 text-white rounded">
				ุนุฑุถ ุงููุญุชูู
			</button>
		</div>
	);
}

                `}
			/>

			<table className='text-rtl'>
				<thead>
					<tr>
						<th>ุงูููุฒุฉ</th>
						<th>Controlled Component</th>
						<th>Uncontrolled Component</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>ุงูุฃุฏุงุก</td>
						<td>ุฃูู ููุงุกุฉ ูุน ุงูุฅุฏุฎุงู ุงููุชูุฑุฑ </td>
						<td>ุฃูุซุฑ ููุงุกุฉ ูุฃูู ูุง ูุนูุฏ ุงูุชุตููุฑ (re-render)</td>
					</tr>
					<tr>
						<td>ุงูุฅุฏุงุฑุฉ ุนุจุฑ React </td>
						<td>ูุนูุ ูุชู ุงูุชุญูู ูู ุงูููู ุฏุงุฎู state </td>
						<td>ูุงุ ุงูููู ููุฌูุฏุฉ ูู DOM ููุท</td>
					</tr>
					<tr>
						<td>ุณูููุฉ ุงูุชูุงุนู ูุน ุงูุจูุงูุงุช </td>
						<td>ูุนูุ ููุงุณุจ ูููุฒุงุช ูุซู ุงูุจุญุซ ุงูููุฑู ูุงูุญูุธ ุงูุชููุงุฆู </td>
						<td>ูุงุ ุชุญุชุงุฌ ุฅูู ref ูููุตูู ุฅูู ุงูููู</td>
					</tr>
					<tr>
						<td>ูุชู ุชุณุชุฎุฏููุ </td>
						<td>ุฅุฐุง ููุช ุจุญุงุฌุฉ ุฅูู ุชุญุฏูุซ ูุณุชูุฑ ุฃู ุชูุงุนู ูุน ุงูููู </td>
						<td>ุฅุฐุง ููุช ุชุญุชุงุฌ ุฅูู ูุฑุงุกุฉ ุงูููู ููุท ุนูุฏ ุงูุญุงุฌุฉ</td>
					</tr>
				</tbody>
			</table>
		</div>
	);
};

export default ControllerAndUncontroller;
