import { Textarea } from '@/components/ui/textarea';
import React from 'react';

const ServerComponentAndServerAction = () => {
	return (
		<div className='flex flex-col gap-6'>
			<Textarea
				className='min-h-[250px]'
				value={`في Next.js: هناك مفهومان رئيسيان للتعامل مع البيانات وتنفيذ العمليات على الخادم: مكونات الخادم (Server Components) وإجراءات الخادم
				(Server Actions). مكونات الخادم (Server Components): التنفيذ على الخادم: يتم تنفيذ هذه المكونات بالكامل على الخادم، مما يقلل من حجم
				JavaScript المرسل إلى العميل ويحسّن الأداء. جلب البيانات: يمكن لهذه المكونات جلب البيانات مباشرةً من قواعد البيانات أو واجهات برمجة
				التطبيقات دون الحاجة إلى استخدام دوال مثل getServerSideProps. الاستخدام: تُستخدم لعرض المحتوى الثابت أو شبه الثابت الذي لا يتطلب
				تفاعلات فورية من المستخدم. إجراءات الخادم (Server Actions): التنفيذ على الخادم: هي دوال غير متزامنة (async) يتم تعريفها باستخدام
				التوجيه "use server"، مما يضمن تنفيذها على الخادم فقط. التعامل مع التفاعلات: تُستخدم لمعالجة التفاعلات مثل إرسال النماذج أو تحديث
				البيانات. يمكن استدعاؤها من مكونات العميل (Client Components) أو مكونات الخادم. المرونة: يمكن تعريفها داخل المكونات أو في ملفات
				منفصلة لإعادة الاستخدام. الاختلافات الرئيسية: الغرض: مكونات الخادم تُستخدم لعرض المحتوى، بينما إجراءات الخادم تُستخدم لمعالجة
				التفاعلات وتحديث البيانات. التنفيذ: مكونات الخادم هي مكونات React تُنفّذ على الخادم، في حين أن إجراءات الخادم هي دوال تُنفّذ على
				الخادم ويمكن استدعاؤها من المكونات. التفاعل مع العميل: يمكن استدعاء إجراءات الخادم من مكونات العميل، مما يتيح معالجة التفاعلات دون
				الحاجة إلى واجهات برمجة تطبيقات منفصلة.`}
			/>

			<Textarea
				className='min-h-[250px]'
				value={`باختصار: مكونات الخادم تُستخدم لعرض المحتوى الذي يُعالج على الخادم، مما يُقلل من حجم JavaScript على العميل ويحسّن الأداء. من ناحية
				أخرى، تُستخدم إجراءات الخادم لتنفيذ وظائف على الخادم استجابةً لتفاعلات المستخدم، مما يُوفّر أمانًا أكبر وإدارة أفضل للتفاعلات
				الحساسة.`}
			/>
		</div>
	);
};

export default ServerComponentAndServerAction;
